server:
  port: 10012

spring:
  application:
    name: demo-springcloud-2-zuul-oauth
        
zuul:
  host:
    connect-timeout-millis: 2000 # 定义连接超时时间 2 秒
    socket-timeout-millis: 1000 # 定义socket连接超时时长 1 秒
    max-total-connections: 200 # 定义http链接池大小
    max-per-route-connections: 20 # 每个host的最大连接数 
  ribbon-isolation-strategy: semaphore # 限流配置
  semaphore:
    max-semaphore: 100 # 最大信号量
  sensitive-headers: null # 默认Zuul认为请求头中 "Cookie", "Set-Cookie", "Authorization" 是敏感信息，它不会转发请求，因为把它设置为空，就会转发了
  add-host-header: true # 正确的处理重定向操作
  #ignored-services: '*' # 服务内部调用的服务，可以忽略
#  prefix: /api 全局前缀
  routes:
    auth: # 认证中心路由ID
      path: /auth/** # 匹配路径
      serviceId: demo-springcloud-2-oauth-server
      strip-prefix: true # 是否去除前缀，默认 false;
#      sensitiveHeaders: "*"
    service-order: # 订单服务路由ID
      path: /order/** # 匹配路径
      serviceId: demo-springcloud-2-service-order # 服务ID
      strip-prefix: false # 是否去除前缀，默认 false; 如果为true，收到请求 /order/get/1 代理转发到/get/1
    service-product: # 商品路由ID
      path: /product/** # 匹配路径
      serviceId: demo-springcloud-2-service-product # 服务ID
      strip-prefix: false # 是否去除前缀，默认 false; 如果为true，收到请求 /product/get/1 代理转发到/get/1
      #url: http://localhost:15001 # 服务匹配可以是服务ID，也可以是 url。通常使用服务ID，带有负载功能
#  ignored-services: # 配置忽略的微服务
#    - demo-springcloud-2-provider-order
#   retryable: false # 是否重试

hystrix: # Zuul 默认集成了 hystrix 和 ribbon，所有策略都做默认配置，熔断超时只有1s，很容易触发，因此我们手动配置
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000
ribbon:
  ConnectionTimeout: 500
  ReadTimeout: 2000
  MaxAutoRetries: 1 # 读取超时重试次数，默认值2
  MaxAutoRetriesNextServer: 1 # 读取超时时重新读取其它机器的次数，默认值1
      